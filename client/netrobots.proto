package netrobots;

// NOTE: for generating Python bindings:
// protoc -I=client --python_out=client client/netrobots.proto
// NOTE: for other languages there are other similar commands to execute.

/**
 * Params used for creating a new Robot.
 */
message CreateRobot {

  /**
   * The name of the robot.
   */
  required string name = 20;

  /**
   * -1 for using default value.
   */
  required sint32 maxHitPoints = 10;

  /**
   * -1 for using default value.
   */
  required sint32 maxSpeed = 11;

  /**
   * -1 for using default value.
   */
  required sint32 acceleration = 12;

  /**
   * -1 for using default value.
   */
  required sint32 decelleration = 13;

  /**
   * -1 for using default value.
   */
  required sint32 maxSterlingSpeed = 14;

  /**
   * -1 for using default value.
   */
  required sint32 maxScanDistance = 15;

  /**
   * -1 for using default value.
   */
  required sint32 maxFireDistance = 16;

  /**
   * -1 for using default value.
   */
  required sint32 bulletSpeed = 17;

  /**
   * -1 for using default value.
   */
  required sint32 bulletDamage = 18;

  /**
   * -1 for using default value.
   */
  required sint32 reloadingTime = 19;
}

message Cannon {
    required int32 degree = 1;
    required int32 distance = 2;
}

message Drive {
    required int32 speed = 3;
    required int32 degree = 4;
}

message Scan {
    required int32 degree = 5;
    required int32 resolution = 6;
}

message RobotCommand {

  required string token = 11;

  optional Cannon cannon = 8;
  optional Scan scan = 9;
  optional Drive drive = 10;
}

message RobotStatus {

  /**
   * The name of the robot.
   */
  required string name = 1;

  /**
   * A unique token identifying the robot inside the system.
   * Automatically assigned from the system.
   */
  required string token = 30;

  /**
   * This status information is valid at this global simulation time.
   */
  required float globalTime = 21;

  /**
   * Hit Points: how many enemy are hit.
   */
  required int32 hp=2;

  required int32 heading = 3;

  required int32 speed = 4;

  required int32 x = 5;

  required int32 y= 6;

  required bool dead = 7;

  required bool winner= 8;

  /**
   * True if the robot creation params respect the constraints.
   */
  required bool wellSpecifiedRobot = 20;

  required int32 maxSpeed = 9;

  /**
   * True if the robot can not fire immediately, because it is reloading the cannon.
   */
  required bool reloading = 10;

  /**
   * True if in the last robot command, the robot fired a missile.
   */
  required bool firedNewMissile = 15;

  message Scan {
    required int32 degree = 11;
    required int32 resolution = 12;
    required int32 distance = 13;
  }

  /**
   * This is the result of the last scan.
   * Compiled only if there were a scan command in the last robot request.
   */
  optional Scan scan = 14;
}

message DeleteRobot {
  required string token = 1;
}

/**
 * The main command to send to the server.
 * The server will execute all the specified parts.
 */
message MainCommand {
  optional CreateRobot createRobot = 1;
  optional RobotCommand robotCommand = 2;
  optional DeleteRobot deleteRobot = 3;
}
